[{"D:\\IdeaProjects\\ML_Ops\\src\\App.js":"1","D:\\IdeaProjects\\ML_Ops\\src\\model\\ModelCard.js":"2","D:\\IdeaProjects\\ML_Ops\\src\\data.js":"3"},{"size":3695,"mtime":1616819847496,"results":"4","hashOfConfig":"5"},{"size":3533,"mtime":1616819847507,"results":"6","hashOfConfig":"5"},{"size":4111,"mtime":1616819847496,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"gmfopi",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IdeaProjects\\ML_Ops\\src\\App.js",["16","17"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport GetHeader from \"./getHeader\";\r\nimport GetDrawer from \"./getDrawer\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Copyright() {\r\n  return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright Â© '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nfunction Panel(props) {\r\n  const { children, value, index} = props;\r\n\r\n  return (\r\n      <div\r\n          hidden={value !== index}\r\n      >\r\n        {value === index && (\r\n            <Box >\r\n              {children}\r\n            </Box>\r\n        )}\r\n      </div>\r\n  );\r\n}\r\n\r\nPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction App(props) {\r\n  const a = props.a ? a: \"\";\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [panelValue, setPanelValue] = React.useState(0);\r\n  const handleDrawerOpen=()=>{\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose=()=>{\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  function handleTabClick(value){\r\n    setPanelValue(value);\r\n    console.log(panelValue)\r\n  };\r\n  return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <GetHeader drawerOpen={open} onDrawerOpen={handleDrawerOpen}/>\r\n        <GetDrawer drawerOpen={open} onDrawerClose={handleDrawerClose} onTabClick={(value)=>handleTabClick(value)} />\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Panel value={panelValue} index={0}>\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                  <Paper className={fixedHeightPaper}>\r\n\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes.paper}>\r\n\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n              <Box pt={4}>\r\n                <Copyright />\r\n              </Box>\r\n            </Container>\r\n          </Panel>\r\n          <Panel value={panelValue} index={1}>\r\n          </Panel>\r\n          <Panel value={panelValue} index={2}>\r\n          </Panel>\r\n          <Panel value={panelValue} index={3}>\r\n          </Panel>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n",["18","19"],"D:\\IdeaProjects\\ML_Ops\\src\\model\\ModelCard.js",[],"D:\\IdeaProjects\\ML_Ops\\src\\data.js",["20"],{"ruleId":"21","severity":1,"message":"22","line":28,"column":7,"nodeType":"23","messageId":"24","endLine":28,"endColumn":18},{"ruleId":"25","severity":1,"message":"26","line":78,"column":23,"nodeType":"23","messageId":"27","endLine":78,"endColumn":24},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":3,"column":1,"nodeType":"34","endLine":144,"endColumn":3},"no-unused-vars","'drawerWidth' is assigned a value but never used.","Identifier","unusedVar","no-use-before-define","'a' was used before it was defined.","usedBeforeDefined","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]